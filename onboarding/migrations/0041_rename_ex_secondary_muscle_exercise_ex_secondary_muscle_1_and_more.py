# Generated by Django 5.1.6 on 2025-02-28 21:25

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('onboarding', '0040_merge_20250228_2125'),
    ]

    operations = [
        migrations.RenameField(
            model_name='exercise',
            old_name='ex_secondary_muscle',
            new_name='ex_secondary_muscle_1',
        ),
        migrations.AddField(
            model_name='exercise',
            name='ex_secondary_muscle_2',
            field=models.CharField(db_comment='Any other secondary muscles', default='', max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='loggedexercise',
            name='date_logged',
            field=models.DateField(default=datetime.date(2025, 2, 28)),
        ),
        migrations.AlterField(
            model_name='loggedexercise',
            name='time_logged',
            field=models.TimeField(default=datetime.time(21, 25, 30, 678076), null=True),
        ),
        migrations.AlterField(
            model_name='otp',
            name='expiry_time',
            field=models.DateTimeField(db_comment='When the OTP can no longer be accepted. Default is 5 minutes after when it was created.', default=datetime.datetime(2025, 2, 28, 21, 30, 30, 678076, tzinfo=datetime.timezone.utc)),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]

# Generated by Django 5.1.6 on 2025-03-22 15:58

import datetime
import django.db.models.deletion
import django.utils.timezone
import onboarding.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ex_name', models.CharField(db_comment='The name of the exercise', default='', max_length=80)),
                ('ex_type', models.CharField(db_comment='Type of exercise, Cardio, Muscle etc', default='', max_length=100)),
                ('ex_body_area', models.CharField(db_comment='What body part the exercise is working on: Legs, back, chest etc', default='', max_length=15)),
                ('equipment_needed', models.CharField(db_comment='Equipment needed for exercise', default='none', max_length=80)),
                ('ex_target_muscle', models.CharField(db_comment='Target Muscle - can be null for cardio', default='', max_length=20, null=True)),
                ('ex_secondary_muscle_1', models.CharField(db_comment='Secondary muscle targeted', default='', max_length=30, null=True)),
                ('ex_secondary_muscle_2', models.CharField(db_comment='Other Secondary Muscle Targeted', default='', max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LoggedExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_logged', models.DateField(default=django.utils.timezone.now)),
                ('time_logged', models.TimeField(default=django.utils.timezone.now, null=True)),
                ('sets', models.PositiveSmallIntegerField(default=0, null=True)),
                ('reps', models.PositiveSmallIntegerField(default=0, null=True)),
                ('distance', models.FloatField(default=0.0, null=True)),
                ('distance_units', models.CharField(choices=[('km', 'km'), ('mi', 'mi')], max_length=5, null=True)),
                ('duration', models.DurationField(default=datetime.timedelta(0), null=True)),
                ('equipment_weight', models.JSONField(default=list, null=True)),
                ('equipment_weight_units', models.CharField(choices=[('kg', 'kg'), ('lb', 'lb')], max_length=2, null=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='onboarding.exercise')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Consumable',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('sample_size', models.FloatField(validators=[onboarding.models.positive_validator])),
                ('sample_units', models.CharField(default='serving', max_length=20)),
                ('sample_calories', models.PositiveIntegerField()),
                ('sample_macros', models.JSONField(null=True, validators=[onboarding.models.validate_macros])),
            ],
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ex_name', models.CharField(db_comment='The name of the exercise', default='', max_length=80)),
                ('ex_type', models.CharField(db_comment='Type of exercise, Cardio, Muscle etc', default='', max_length=100)),
                ('ex_body_area', models.CharField(db_comment='What body part the exercise is working on: Legs, back, chest etc', default='', max_length=15)),
                ('equipment_needed', models.CharField(db_comment='Equipment needed for exercise', default='none', max_length=80)),
                ('ex_target_muscle', models.CharField(db_comment='Target Muscle - can be null for cardio', default='', max_length=20, null=True)),
                ('ex_secondary_muscle_1', models.CharField(db_comment='Secondary muscle targeted', default='', max_length=30, null=True)),
                ('ex_secondary_muscle_2', models.CharField(db_comment='Other Secondary Muscle Targeted', default='', max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LoggedConsumable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_logged', models.FloatField(validators=[onboarding.models.positive_validator])),
                ('date_logged', models.DateField()),
                ('calories_logged', models.PositiveIntegerField()),
                ('macros_logged', models.JSONField(null=True, validators=[onboarding.models.validate_macros])),
                ('consumable', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='onboarding.consumable')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='consumable',
            name='logged_user',
            field=models.ManyToManyField(through='onboarding.LoggedConsumable', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='LoggedExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_logged', models.DateField(default=datetime.date(2025, 3, 16))),
                ('time_logged', models.TimeField(default=datetime.time(19, 53, 54, 21024), null=True)),
                ('sets', models.PositiveSmallIntegerField(default=0, null=True)),
                ('reps', models.PositiveSmallIntegerField(default=0, null=True)),
                ('distance', models.FloatField(default=0.0, null=True)),
                ('distance_units', models.CharField(choices=[('km', 'km'), ('mi', 'mi')], max_length=5, null=True)),
                ('duration', models.DurationField(default=datetime.timedelta(0), null=True)),
                ('equipment_weight', models.JSONField(default=list, null=True)),
                ('equipment_weight_units', models.CharField(choices=[('kg', 'kg'), ('lb', 'lb')], max_length=2, null=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='onboarding.exercise')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.CharField(db_comment='The OTP sent to the user.', default='', max_length=6)),
                ('created_at', models.DateTimeField(auto_now=True, db_comment='When the OTP was created. Useful for restricting the frequency of new OTP generation.')),
                ('expiry_time', models.DateTimeField(db_comment='When the OTP can no longer be accepted. Default is 5 minutes after when it was created.')),
                ('verified', models.BooleanField(db_comment='Whether the OTP for the user has been verified. Good for preventing repeat entries and also ensuring user is secure.', default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RecommendedExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_recommended', models.DateTimeField(default=django.utils.timezone.now)),
                ('good_recommendation', models.BooleanField(default=True)),
                ('sets', models.PositiveSmallIntegerField(default=0, null=True)),
                ('reps', models.PositiveSmallIntegerField(default=0, null=True)),
                ('distance', models.FloatField(default=0.0, null=True)),
                ('distance_units', models.CharField(choices=[('km', 'km'), ('mi', 'mi')], max_length=5, null=True)),
                ('duration', models.DurationField(default=datetime.timedelta(0), null=True)),
                ('equipment_weight', models.JSONField(default=list, null=True)),
                ('equipment_weight_units', models.CharField(choices=[('kg', 'kg'), ('lb', 'lb')], max_length=2, null=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='onboarding.exercise')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_age', models.PositiveSmallIntegerField()),
                ('user_sex', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('X', 'Prefer not to say/Other')], max_length=1, null=True)),
                ('user_height', models.FloatField()),
                ('user_height_units', models.CharField(choices=[('in', 'Inches'), ('cm', 'Centimeters')], max_length=2)),
                ('user_weight', models.FloatField(null=True)),
                ('user_weight_units', models.CharField(choices=[('lb', 'Pounds'), ('kg', 'Kilograms')], max_length=2, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VerifiedUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verified', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
